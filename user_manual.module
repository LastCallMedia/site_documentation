<?php

/**
 * @file
 * User Manual module file.
 */

use Drupal\Core\Render\Element;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\user_manual\Entity\UserManual;
use Drupal\views\Views;

/**
 * Implements hook_module_implements_alter().
 */
function user_manual_module_implements_alter(&$implementations, $hook) {
  if ($hook === 'help' && isset($implementations['help'])) {
    unset($implementations['help']);
  }
}

/**
 * Implements hook_theme().
 */
function user_manual_theme($existing, $type, $theme, $path) {
  return [
    'user_manual' => [
      'render element' => 'elements',
    ],
    'help_section__user_manual' => [
      'variables' => [
        'documents_view' => null,
      ],
    ],
  ];
}

/**
 * Implements hook_entity_type_build().
 */
function user_manual_user_manual_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($build['#view_mode'] !== 'full'
    || !$entity->hasField('field_manual_topics')
    || $entity->get('field_manual_topics')->isEmpty()
    || !Views::getView('related_user_manuals')
  ) {
    return;
  }

  $topics = array_map(function ($topic) {
    return $topic['target_id'];
  }, $entity->get('field_manual_topics')->getValue());

  if (!empty($topics)) {
    $build['related_docs'] = [
      '#type' => 'view',
      '#name' => 'related_user_manuals',
      '#display_id' => 'block_1',
      '#embed' => TRUE,
      '#arguments' => [implode('+', $topics), $entity->id()],
    ];
  }
}

/**
 * Add useful variables for template.
 */
function user_manual_preprocess_user_manual(&$vars) {
  $vars['view_mode'] = $vars['elements']['#view_mode'];
  // Helpful $content variable for templates.
  $vars += ['content' => []];
  foreach (Element::children($vars['elements']) as $key) {
    $vars['content'][$key] = $vars['elements'][$key];
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function user_manual_preprocess_help_section__user_manual(&$vars) {
  if (Views::getView('related_user_manuals')) {
    $vars['documents_view'] = [
      '#type' => 'view',
      '#name' => 'related_user_manuals',
      '#display_id' => 'block_2',
      '#embed' => TRUE,
      '#arguments' => [],
    ];
  }
}

/**
 * Implements hook_help_section_info_alter().
 */
function user_manual_help_section_info_alter(array &$info) {
  foreach ($info as $plugin_id => $plugin_info) {
    if (empty($info[$plugin_id]['permission'])) {
      $info[$plugin_id]['permission'] = 'access ' . $plugin_id . ' help section';
    }
  }
}

/**
 * Implements hook_theme_suggestions_alter().
 */
function user_manual_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if ($hook !== 'help_section') {
    return;
  }

  if ($variables['title']->render() === 'User Manual') {
    // Both lines below are needed.
    $suggestions[] = 'help_section__user_manual';
    $variables['theme_hook_original'] = 'help_section__user_manual';
  }
}
